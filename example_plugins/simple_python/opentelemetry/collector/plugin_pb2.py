# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: plugin.proto
"""Generated protocol buffer code."""
from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()




DESCRIPTOR = _descriptor.FileDescriptor(
  name='plugin.proto',
  package='opentelemetry.proto.collector.plugin.v1',
  syntax='proto3',
  serialized_options=b'ZAgithub.com/open-telemetry/collector/receiver/pluginreceiver/proto',
  create_key=_descriptor._internal_create_key,
  serialized_pb=b'\n\x0cplugin.proto\x12\'opentelemetry.proto.collector.plugin.v1\"\x9e\x01\n\x0ePluginResponse\x12P\n\x04type\x18\x01 \x01(\x0e\x32\x42.opentelemetry.proto.collector.plugin.v1.PluginResponse.SignalType\x12\x0c\n\x04\x64\x61ta\x18\x02 \x01(\x0c\",\n\nSignalType\x12\n\n\x06METRIC\x10\x00\x12\t\n\x05TRACE\x10\x01\x12\x07\n\x03LOG\x10\x02\"\x84\x01\n\x06\x43onfig\x12K\n\x06values\x18\x01 \x03(\x0b\x32;.opentelemetry.proto.collector.plugin.v1.Config.ValuesEntry\x1a-\n\x0bValuesEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\t:\x02\x38\x01\"P\n\rPluginRequest\x12?\n\x06\x63onfig\x18\x01 \x01(\x0b\x32/.opentelemetry.proto.collector.plugin.v1.Config2\x8b\x01\n\rPluginService\x12z\n\x03run\x12\x36.opentelemetry.proto.collector.plugin.v1.PluginRequest\x1a\x37.opentelemetry.proto.collector.plugin.v1.PluginResponse\"\x00\x30\x01\x42\x43ZAgithub.com/open-telemetry/collector/receiver/pluginreceiver/protob\x06proto3'
)



_PLUGINRESPONSE_SIGNALTYPE = _descriptor.EnumDescriptor(
  name='SignalType',
  full_name='opentelemetry.proto.collector.plugin.v1.PluginResponse.SignalType',
  filename=None,
  file=DESCRIPTOR,
  create_key=_descriptor._internal_create_key,
  values=[
    _descriptor.EnumValueDescriptor(
      name='METRIC', index=0, number=0,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='TRACE', index=1, number=1,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='LOG', index=2, number=2,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
  ],
  containing_type=None,
  serialized_options=None,
  serialized_start=172,
  serialized_end=216,
)
_sym_db.RegisterEnumDescriptor(_PLUGINRESPONSE_SIGNALTYPE)


_PLUGINRESPONSE = _descriptor.Descriptor(
  name='PluginResponse',
  full_name='opentelemetry.proto.collector.plugin.v1.PluginResponse',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='type', full_name='opentelemetry.proto.collector.plugin.v1.PluginResponse.type', index=0,
      number=1, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='data', full_name='opentelemetry.proto.collector.plugin.v1.PluginResponse.data', index=1,
      number=2, type=12, cpp_type=9, label=1,
      has_default_value=False, default_value=b"",
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
    _PLUGINRESPONSE_SIGNALTYPE,
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=58,
  serialized_end=216,
)


_CONFIG_VALUESENTRY = _descriptor.Descriptor(
  name='ValuesEntry',
  full_name='opentelemetry.proto.collector.plugin.v1.Config.ValuesEntry',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='key', full_name='opentelemetry.proto.collector.plugin.v1.Config.ValuesEntry.key', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='value', full_name='opentelemetry.proto.collector.plugin.v1.Config.ValuesEntry.value', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=b'8\001',
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=306,
  serialized_end=351,
)

_CONFIG = _descriptor.Descriptor(
  name='Config',
  full_name='opentelemetry.proto.collector.plugin.v1.Config',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='values', full_name='opentelemetry.proto.collector.plugin.v1.Config.values', index=0,
      number=1, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[_CONFIG_VALUESENTRY, ],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=219,
  serialized_end=351,
)


_PLUGINREQUEST = _descriptor.Descriptor(
  name='PluginRequest',
  full_name='opentelemetry.proto.collector.plugin.v1.PluginRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='config', full_name='opentelemetry.proto.collector.plugin.v1.PluginRequest.config', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=353,
  serialized_end=433,
)

_PLUGINRESPONSE.fields_by_name['type'].enum_type = _PLUGINRESPONSE_SIGNALTYPE
_PLUGINRESPONSE_SIGNALTYPE.containing_type = _PLUGINRESPONSE
_CONFIG_VALUESENTRY.containing_type = _CONFIG
_CONFIG.fields_by_name['values'].message_type = _CONFIG_VALUESENTRY
_PLUGINREQUEST.fields_by_name['config'].message_type = _CONFIG
DESCRIPTOR.message_types_by_name['PluginResponse'] = _PLUGINRESPONSE
DESCRIPTOR.message_types_by_name['Config'] = _CONFIG
DESCRIPTOR.message_types_by_name['PluginRequest'] = _PLUGINREQUEST
_sym_db.RegisterFileDescriptor(DESCRIPTOR)

PluginResponse = _reflection.GeneratedProtocolMessageType('PluginResponse', (_message.Message,), {
  'DESCRIPTOR' : _PLUGINRESPONSE,
  '__module__' : 'plugin_pb2'
  # @@protoc_insertion_point(class_scope:opentelemetry.proto.collector.plugin.v1.PluginResponse)
  })
_sym_db.RegisterMessage(PluginResponse)

Config = _reflection.GeneratedProtocolMessageType('Config', (_message.Message,), {

  'ValuesEntry' : _reflection.GeneratedProtocolMessageType('ValuesEntry', (_message.Message,), {
    'DESCRIPTOR' : _CONFIG_VALUESENTRY,
    '__module__' : 'plugin_pb2'
    # @@protoc_insertion_point(class_scope:opentelemetry.proto.collector.plugin.v1.Config.ValuesEntry)
    })
  ,
  'DESCRIPTOR' : _CONFIG,
  '__module__' : 'plugin_pb2'
  # @@protoc_insertion_point(class_scope:opentelemetry.proto.collector.plugin.v1.Config)
  })
_sym_db.RegisterMessage(Config)
_sym_db.RegisterMessage(Config.ValuesEntry)

PluginRequest = _reflection.GeneratedProtocolMessageType('PluginRequest', (_message.Message,), {
  'DESCRIPTOR' : _PLUGINREQUEST,
  '__module__' : 'plugin_pb2'
  # @@protoc_insertion_point(class_scope:opentelemetry.proto.collector.plugin.v1.PluginRequest)
  })
_sym_db.RegisterMessage(PluginRequest)


DESCRIPTOR._options = None
_CONFIG_VALUESENTRY._options = None

_PLUGINSERVICE = _descriptor.ServiceDescriptor(
  name='PluginService',
  full_name='opentelemetry.proto.collector.plugin.v1.PluginService',
  file=DESCRIPTOR,
  index=0,
  serialized_options=None,
  create_key=_descriptor._internal_create_key,
  serialized_start=436,
  serialized_end=575,
  methods=[
  _descriptor.MethodDescriptor(
    name='run',
    full_name='opentelemetry.proto.collector.plugin.v1.PluginService.run',
    index=0,
    containing_service=None,
    input_type=_PLUGINREQUEST,
    output_type=_PLUGINRESPONSE,
    serialized_options=None,
    create_key=_descriptor._internal_create_key,
  ),
])
_sym_db.RegisterServiceDescriptor(_PLUGINSERVICE)

DESCRIPTOR.services_by_name['PluginService'] = _PLUGINSERVICE

# @@protoc_insertion_point(module_scope)
